
package soap.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "LibServer", targetNamespace = "http://soap/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface LibServer {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "newLib", targetNamespace = "http://soap/", className = "soap.service.NewLib")
    @ResponseWrapper(localName = "newLibResponse", targetNamespace = "http://soap/", className = "soap.service.NewLibResponse")
    @Action(input = "http://soap/LibServer/newLibRequest", output = "http://soap/LibServer/newLibResponse")
    public String newLib(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLib", targetNamespace = "http://soap/", className = "soap.service.GetLib")
    @ResponseWrapper(localName = "getLibResponse", targetNamespace = "http://soap/", className = "soap.service.GetLibResponse")
    @Action(input = "http://soap/LibServer/getLibRequest", output = "http://soap/LibServer/getLibResponse")
    public List<String> getLib();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "chkRightsLib", targetNamespace = "http://soap/", className = "soap.service.ChkRightsLib")
    @ResponseWrapper(localName = "chkRightsLibResponse", targetNamespace = "http://soap/", className = "soap.service.ChkRightsLibResponse")
    @Action(input = "http://soap/LibServer/chkRightsLibRequest", output = "http://soap/LibServer/chkRightsLibResponse")
    public String chkRightsLib(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://soap/", className = "soap.service.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://soap/", className = "soap.service.HelloResponse")
    @Action(input = "http://soap/LibServer/helloRequest", output = "http://soap/LibServer/helloResponse")
    public String hello(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnLib", targetNamespace = "http://soap/", className = "soap.service.ReturnLib")
    @ResponseWrapper(localName = "returnLibResponse", targetNamespace = "http://soap/", className = "soap.service.ReturnLibResponse")
    @Action(input = "http://soap/LibServer/returnLibRequest", output = "http://soap/LibServer/returnLibResponse")
    public String returnLib(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "regUser", targetNamespace = "http://soap/", className = "soap.service.RegUser")
    @ResponseWrapper(localName = "regUserResponse", targetNamespace = "http://soap/", className = "soap.service.RegUserResponse")
    @Action(input = "http://soap/LibServer/regUserRequest", output = "http://soap/LibServer/regUserResponse")
    public String regUser(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "borrowLib", targetNamespace = "http://soap/", className = "soap.service.BorrowLib")
    @ResponseWrapper(localName = "borrowLibResponse", targetNamespace = "http://soap/", className = "soap.service.BorrowLibResponse")
    @Action(input = "http://soap/LibServer/borrowLibRequest", output = "http://soap/LibServer/borrowLibResponse")
    public String borrowLib(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "showDebts", targetNamespace = "http://soap/", className = "soap.service.ShowDebts")
    @ResponseWrapper(localName = "showDebtsResponse", targetNamespace = "http://soap/", className = "soap.service.ShowDebtsResponse")
    @Action(input = "http://soap/LibServer/showDebtsRequest", output = "http://soap/LibServer/showDebtsResponse")
    public List<String> showDebts(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addLib", targetNamespace = "http://soap/", className = "soap.service.AddLib")
    @ResponseWrapper(localName = "addLibResponse", targetNamespace = "http://soap/", className = "soap.service.AddLibResponse")
    @Action(input = "http://soap/LibServer/addLibRequest", output = "http://soap/LibServer/addLibResponse")
    public String addLib(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

}
